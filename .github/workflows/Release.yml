name: "Release"

permissions:
  contents: "write"

on:
  push:
    branches:
      - "release"
  workflow_run:
    workflows: ["Tag", "Test"]
    types:
      - "completed"

jobs:
  get-tag:
    name: "Get Tag From Package Version"
    runs-on: "ubuntu-latest"
    outputs:
      pkg-version: ${{ steps.pkg-version.outputs.PKG_VERSION }} 
      bin-name: ${{ steps.bin-name.outputs.BIN_NAME }} 
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: "Get tag"
        id: "pkg-version"
        shell: "bash"
        run: |
          echo PKG_VERSION=$(awk -F ' = ' '$1 ~ /version/ { gsub(/["]/, "", $2); printf("%s",$2) }' Cargo.toml) >> $GITHUB_OUTPUT
      
      - name: "Get bin name"
        id: "bin-name"
        shell: "bash"
        run: |
          echo BIN_NAME=$(awk -F ' = ' '$1 ~ /name/ { gsub(/["]/, "", $2); printf("%s",$2) }' Cargo.toml) >> $GITHUB_OUTPUT
  
  get-bin-name:
    name: test-get-tag
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: "Get Tag Test"
        shell: "bash"
        run: |
          echo bing-name is $(awk -F ' = ' '$1 ~ /version/ { gsub(/["]/, "", $2); printf("%s",$2) }' Cargo.toml)
      
  create-release:
    name: "Create release"
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    needs: 
      - "get-tag"
      - "get-bin-name"
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v3
      
      - name: "Create release"
        uses: "taiki-e/create-gh-release-action@v1"
        with:
          # (optional) Path to changelog.
          # changelog: CHANGELOG.md
          branch: "release"
          ref: refs/tags/v${{ needs.get-tag.outputs.pkg-version }}
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    name: "Upload assets to Github releases"
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    needs: 
     - "get-tag"
     - "create-release"
    strategy:
      matrix:
        include:
          - target: "x86_64-unknown-linux-gnu"
            os: "ubuntu-latest"
          - target: "x86_64-unknown-linux-musl"
            os: "ubuntu-latest"
          - target: x86_64-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: "Check out the repo"
        uses: actions/checkout@v3

      - name: "Upload Binaries"
        uses: "taiki-e/upload-rust-binary-action@v1"
        with:
          bin: ${{ needs.get-tag.outputs.bin-name }} 
          target: ${{ matrix.target }}
          archive: $bin-${{ matrix.target }}
          # tar: none
          ref: refs/tags/v${{ needs.get-tag.outputs.pkg-version }}
          token: ${{ secrets.GITHUB_TOKEN }}

  # push-to-registry:
  #   name: "Push Docker image to Docker Hub"
  #   if: ${{ github.event.workflow_run.conclusion == 'success' }}
  #   needs:
  #     - "get-tag"
  #     - "upload-assets"
  #   runs-on: "ubuntu-latest"
  #   steps:
  #     - name: "Check out the repo"
  #       uses: actions/checkout@v3

  #     - name: "Log in to Docker Hub"
  #       uses: "docker/login-action@v2"
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
      
  #     - name: "Extract metadata (tags, labels) for Docker"
  #       id: "meta"
  #       uses: "docker/metadata-action@v4"
  #       with:
  #         images: "bwks/pingmu"
      
  #     - name: "Build and push Docker image"
  #       uses: "docker/build-push-action@v3"
  #       with:
  #         context: .
  #         push: true
  #         tags: bwks/pingmu:latest,bwks/pingmu:v${{ needs.get-tag.outputs.pkg-version }}
  #         labels: ${{ steps.meta.outputs.labels }}